{"version":3,"sources":["webpack:///./src/templates/postListTemplate.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/core-js/modules/_create-property.js"],"names":["postListPage","_ref","data","pageContext","posts","allMarkdownRemark","edges","currentPage","numPages","isFirst","isLast","prevPage","pathPrefix","toString","nextPage","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_7__","_components_seo__WEBPACK_IMPORTED_MODULE_9__","title","keywords","className","map","post","key","node","id","gatsby__WEBPACK_IMPORTED_MODULE_6__","to","fields","slug","gatsby_image__WEBPACK_IMPORTED_MODULE_8___default","fixed","frontmatter","thumbnail","childImageSharp","date","excerpt","rel","Array","from","length","_","i","query","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","ctx","__webpack_require__","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","arrayLike","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","index","iterFn","next","done","value","$defineProperty","createDesc","module","exports","f"],"mappings":"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","file":"component---src-templates-post-list-template-js-a02063b88399f428c7b0.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport Img from 'gatsby-image';\nimport SEO from '../components/seo';\n\nconst postListPage = ({ data, pageContext }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const { currentPage, numPages } = pageContext;\n  const pathPrefix = 'news';\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage =\n    currentPage - 1 === 1\n      ? `${pathPrefix}/`\n      : `${pathPrefix}/${(currentPage - 1).toString()}`;\n  const nextPage = `${pathPrefix}/${(currentPage + 1).toString()}`;\n  return (\n    <Layout>\n      <SEO title=\"News\" keywords={[`gatsby`, `application`, `react`]} />\n      <div className=\"post-list\">\n        {posts.map(post => (\n          <div key={post.node.id} className=\"post-list__item\">\n            <div className=\"post-list__thumbnail\">\n              <Link to={post.node.fields.slug}>\n                <Img\n                  fixed={post.node.frontmatter.thumbnail.childImageSharp.fixed}\n                />\n              </Link>\n            </div>\n            <div className=\"post-list__content\">\n              <h2>{post.node.frontmatter.title}</h2>\n              <p>{post.node.frontmatter.date}</p>\n              <div className=\"post-list__excerpt\">\n                <p>{post.node.excerpt}</p>\n              </div>\n              <Link className=\"button button--small\" to={post.node.fields.slug}>\n                Read More\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"page-navigation\">\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            ← Previous Page\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link\n            key={`pagination-number${i + 1}`}\n            to={`${pathPrefix}/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            Next Page →\n          </Link>\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nexport default postListPage;\n\n// Get all markdown files, in descending order by date, and grab the id, excerpt, slug, date, and title\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            thumbnail {\n              childImageSharp {\n                fixed(width: 200, height: 200) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n"],"sourceRoot":""}