{"version":3,"sources":["webpack:///./src/templates/postListTemplate.js","webpack:///./src/components/seo.js","webpack:///./src/components/breadcrumb/breadcrumb.js","webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./node_modules/core-js/modules/_create-property.js"],"names":["NewsPage","_ref","data","pageContext","posts","breadcrumb","allMarkdownRemark","edges","currentPage","numPages","isFirst","isLast","prevPage","pathPrefix","toString","nextPage","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_7__","_components_breadcrumb_breadcrumb__WEBPACK_IMPORTED_MODULE_10__","crumbs","_components_seo__WEBPACK_IMPORTED_MODULE_9__","title","className","map","post","key","node","id","gatsby__WEBPACK_IMPORTED_MODULE_6__","to","fields","slug","gatsby_image__WEBPACK_IMPORTED_MODULE_8___default","fixed","frontmatter","thumbnail","childImageSharp","date","excerpt","rel","Array","from","length","_","i","pageQuery","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_breadcrumb_module_css__WEBPACK_IMPORTED_MODULE_2__","_breadcrumb_module_css__WEBPACK_IMPORTED_MODULE_2___default","__webpack_exports__","props","breadcrumbStyles","crumb","index","toLowerCase","style","clear","ctx","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","arrayLike","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","iterFn","next","done","value","$defineProperty","createDesc","module","exports","f"],"mappings":"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","file":"component---src-templates-post-list-template-js-ba0a44a222ffa1579f70.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport Img from 'gatsby-image';\nimport SEO from '../components/seo';\nimport Breadcrumb from \"../components/breadcrumb/breadcrumb\"\n\nconst NewsPage = ({ data, pageContext,breadcrumb }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const { currentPage, numPages } = pageContext;\n  const pathPrefix = 'news';\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage =\n    currentPage - 1 === 1\n      ? `${pathPrefix}/`\n      : `${pathPrefix}/${(currentPage - 1).toString()}`;\n  const nextPage = `${pathPrefix}/${(currentPage + 1).toString()}`;\n  return (\n    <Layout>\n       <Breadcrumb crumbs={ [ 'Home', 'News' ] } />\n        <SEO title=\"News\" />\n      <section className=\"center mw8 center ph2-ns\">\n      <div className=\"post-list\">\n        {posts.map(post => (\n          <div key={post.node.id} className=\"post-list__item\">\n            <div className=\"post-list__thumbnail\">\n              <Link to={post.node.fields.slug}>\n                <Img\n                  fixed={post.node.frontmatter.thumbnail.childImageSharp.fixed}\n                />\n              </Link>\n            </div>\n            <div className=\"post-list__content\">\n              <h2>{post.node.frontmatter.title}</h2>\n              <p>{post.node.frontmatter.date}</p>\n              <div className=\"post-list__excerpt\">\n                <p>{post.node.excerpt}</p>\n              </div>\n              <Link className=\"button button--small\" to={post.node.fields.slug}>\n                Read More\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"page-navigation\">\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            ← Previous Page\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link\n            key={`pagination-number${i + 1}`}\n            to={`${pathPrefix}/${i === 0 ? '' : i + 1}`}\n          >\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            Next Page →\n          </Link>\n        )}\n      </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default NewsPage;\n\n// Get all markdown files, in descending order by date, and grab the id, excerpt, slug, date, and title\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            thumbnail {\n              childImageSharp {\n                fixed(width: 200, height: 200) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport breadcrumbStyles from \"./breadcrumb.module.css\"\n\nexport default props => {\n    return (\n        <div className=\"mw8 center\">\n            <ul className={breadcrumbStyles.breadcrumb}>\n                {props.crumbs.map((crumb, index) => (\n                    ((props.crumbs.length - index) > 1) ? <li key={index}><Link to={crumb.toLowerCase()}>{crumb}</Link></li> : <li key={index}>{crumb}</li> \n                ))}\n            </ul>\n            <div style={{ clear: 'both' }}></div>\n        </div>\n        \n    )\n}","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n"],"sourceRoot":""}