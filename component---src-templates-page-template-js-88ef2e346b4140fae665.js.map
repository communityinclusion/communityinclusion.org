{"version":3,"sources":["webpack:///./src/templates/pageTemplate.js"],"names":["pageTemplate","pageContext","data","crumbs","location","breadcrumb","page","markdownRemark","frontmatter","html","title","className","crumbSeparator","crumbLabel","date","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"4FAAA,8GAuCeA,UAhCM,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAEnBC,GAFwC,EAAfC,SAGrCH,EADFI,WAAcF,QAKVG,EAAOJ,EAAKK,eACVA,EAAmBL,EAAnBK,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,KACb,6BAASC,UAAU,qBACnB,yBAAKA,UAAU,eACjB,kBAAC,aAAD,CACQR,OAAQA,EACRS,eAAe,MACfC,WAAYP,EAAKE,YAAYE,SAIjC,yBAAKC,UAAU,QACb,4BAAKH,EAAYE,OACjB,8BAAOF,EAAYM,OAErB,yBAAKC,wBAAyB,CAAEC,OAAQP,QAQzC,IAAMQ,EAAS","file":"component---src-templates-page-template-js-88ef2e346b4140fae665.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Breadcrumb } from 'gatsby-plugin-breadcrumb'\n\n\nconst pageTemplate = ({ pageContext, data, location }) => {\n  const {\n    breadcrumb: { crumbs },\n  } = pageContext\n\n  // Example of dynamically using location prop as a crumbLabel\n// const customCrumbLabel = location.pathname.toLowerCase().replace(/-/g, ' ')\n  const page = data.markdownRemark\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <Layout>\n        <SEO title=\"\" />\n      <section className=\"mw8 center ph2-ns\">\n      <div className=\"breadcrumbs\">\n    <Breadcrumb\n            crumbs={crumbs}\n            crumbSeparator=\" / \"\n            crumbLabel={page.frontmatter.title}\n            \n          />\n          </div>\n        <div className=\"page\">\n          <h1>{frontmatter.title}</h1>\n          <span>{frontmatter.date}</span>\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </section>\n    </Layout>\n  );\n};\n\nexport default pageTemplate;\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        tags\n        posttype\n      }\n    }\n  }\n`;"],"sourceRoot":""}