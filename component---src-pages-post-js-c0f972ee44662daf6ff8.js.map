{"version":3,"sources":["webpack:///./src/pages/post.js","webpack:///./src/components/seo.js","webpack:///./src/components/breadcrumb/breadcrumb.js"],"names":["PostPage","_ref","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_breadcrumb_breadcrumb__WEBPACK_IMPORTED_MODULE_5__","crumbs","className","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","map","post","key","node","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","gatsby_image__WEBPACK_IMPORTED_MODULE_6___default","fixed","frontmatter","thumbnail","childImageSharp","date","excerpt","pageQuery","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_breadcrumb_module_css__WEBPACK_IMPORTED_MODULE_2__","_breadcrumb_module_css__WEBPACK_IMPORTED_MODULE_2___default","__webpack_exports__","props","breadcrumbStyles","breadcrumb","crumb","index","toLowerCase","style","clear"],"mappings":"2NA0CeA,UAnCE,SAAAC,GAAc,IACrBC,EADqBD,EAAXE,KACGC,kBAAkBC,MACrC,OACFC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACOH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,OAAS,CAAE,OAAQ,UACrCL,EAAAC,EAAAC,cAAA,WAASI,UAAU,cACnBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,MAAM,SACVR,EAAAC,EAAAC,cAAA,kBAIAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACVV,EAAMa,IAAI,SAAAC,GAAI,OACbV,EAAAC,EAAAC,cAAA,OAAKS,IAAKD,EAAKE,KAAKC,GAAIP,UAAU,mBAChCN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACbN,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAIL,EAAKE,KAAKI,OAAOC,MACzBjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CACEkB,MAAOT,EAAKE,KAAKQ,YAAYC,UAAUC,gBAAgBH,UAI7DnB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBACbN,EAAAC,EAAAC,cAAA,UAAKQ,EAAKE,KAAKQ,YAAYZ,OAC3BR,EAAAC,EAAAC,cAAA,SAAIQ,EAAKE,KAAKQ,YAAYG,MAC1BvB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBAAsBI,EAAKE,KAAKY,SAC/CxB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAIL,EAAKE,KAAKI,OAAOC,MAA3B,qBAYP,IAAMQ,EAAS,8GChCtB,SAASC,EAAT/B,GAA2D,IAA5CgC,EAA4ChC,EAA5CgC,YAAaC,EAA+BjC,EAA/BiC,KAAMC,EAAyBlC,EAAzBkC,KAAMC,EAAmBnC,EAAnBmC,SAAUtB,EAASb,EAATa,MACxCuB,EADiDC,EAAAnC,KACjDkC,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACE3B,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEmC,eAAgB,CACdR,QAEFpB,MAAOA,EACP6B,cAAa,QAAUN,EAAKG,aAAa1B,MACzCqB,KAAM,CACJ,CACES,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAS/B,GAEX,CACEgC,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAAS/B,GAEX,CACE8B,KAAI,sBACJC,QAASN,IAGVS,OACCZ,EAASa,OAAS,EACd,CACEL,KAAI,WACJC,QAAST,EAASc,KAAT,OAEX,IAELF,OAAOb,KAKhBH,EAAImB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbD,EAAIoB,UAAY,CACdnB,YAAaoB,IAAUC,OACvBpB,KAAMmB,IAAUC,OAChBnB,KAAMkB,IAAUE,QAAQF,IAAUG,QAClCpB,SAAUiB,IAAUE,QAAQF,IAAUC,QACtCxC,MAAOuC,IAAUC,OAAOG,YAGXzB,4TClGf,IAAA0B,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAAE,EAAAE,GAIeE,EAAA,WAAAC,GACX,OACIN,EAAArD,EAAAC,cAAA,OAAKI,UAAU,cACXgD,EAAArD,EAAAC,cAAA,MAAII,UAAWuD,IAAiBC,YAC3BF,EAAMvD,OAAOI,IAAI,SAACsD,EAAOC,GAAR,OACZJ,EAAMvD,OAAOsC,OAASqB,EAAS,EAAKV,EAAArD,EAAAC,cAAA,MAAIS,IAAKqD,GAAOV,EAAArD,EAAAC,cAACsD,EAAA,EAAD,CAAMzC,GAAIgD,EAAME,eAAgBF,IAAqBT,EAAArD,EAAAC,cAAA,MAAIS,IAAKqD,GAAQD,MAGpIT,EAAArD,EAAAC,cAAA,OAAKgE,MAAO,CAAEC,MAAO","file":"component---src-pages-post-js-c0f972ee44662daf6ff8.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Breadcrumb from \"../components/breadcrumb/breadcrumb\"\nimport Img from 'gatsby-image';\n\nconst PostPage = ({ data }) => {\n    const posts = data.allMarkdownRemark.edges;\n    return (\n  <Layout>\n         <Breadcrumb crumbs={ [ 'Home', 'News' ] } />\n   <section className=\"center mw8\">\n   <SEO title=\"News\" />\n    <h1>News</h1>\n\n \n\n    <div className=\"post-list\">\n        {posts.map(post => (\n          <div key={post.node.id} className=\"post-list__item\">\n            <div className=\"post-list__thumbnail\">\n              <Link to={post.node.fields.slug}>\n                <Img\n                  fixed={post.node.frontmatter.thumbnail.childImageSharp.fixed}\n                />\n              </Link>\n            </div>\n            <div className=\"post-list__content\">\n              <h2>{post.node.frontmatter.title}</h2>\n              <p>{post.node.frontmatter.date}</p>\n              <div className=\"post-list__excerpt\">{post.node.excerpt}</div>\n              <Link to={post.node.fields.slug}>Read More</Link>\n            </div>\n          </div>\n        ))}\n      </div>\n\n</section>\n</Layout>\n)\n        }\nexport default PostPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            thumbnail {\n              childImageSharp {\n                fixed(width: 200, height: 200) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport breadcrumbStyles from \"./breadcrumb.module.css\"\n\nexport default props => {\n    return (\n        <div className=\"mw8 center\">\n            <ul className={breadcrumbStyles.breadcrumb}>\n                {props.crumbs.map((crumb, index) => (\n                    ((props.crumbs.length - index) > 1) ? <li key={index}><Link to={crumb.toLowerCase()}>{crumb}</Link></li> : <li key={index}>{crumb}</li> \n                ))}\n            </ul>\n            <div style={{ clear: 'both' }}></div>\n        </div>\n        \n    )\n}"],"sourceRoot":""}